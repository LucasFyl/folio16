/* 
  Photoshop does not apply line height to the first row, which CSS does. This creates all kinds of havock. 
  To calculate the correct offset for the first line we need the font-size and the lineheight, i.e:
  
  @include line-height(22,30);
  
  in Photoshop points/px (but with no unit)
*/
@mixin line-height($fontsize, $lineheight ){

    line-height: ($lineheight) + px;
    line-height: ($lineheight/10) + rem;

    margin-top: (($lineheight - $fontsize)/2 * -1) + px;
    margin-top: ((($lineheight - $fontsize)/2 * -1) / 10 ) + rem
}

/* Letter spacing is simpler.. stolen from somewhere */
@mixin letter-spacing($letterspacing) {
    letter-spacing: $letterspacing/1000;
}

/* font-size to rem with backup, stolen from somewhere */
@mixin font-size($sizeValue: 16) {
  font-size: ($sizeValue) + px;
  font-size: ($sizeValue/10) + rem;
}


@mixin overlay($color) {
    &:before {
      content: " ";
      @include size(100%);
      position: absolute;
      top: 0;left: 0;right: 0;bottom: 0;
      z-index: 2;
      background:$color;
      @include transition(all 0.25s $ease-out-sine);
    }
}

@mixin center($value) {
  @if $value == 'vertical' {
    position: relative; top: 50%;
    @include transform(translateY(-50%));
  }
  @else if $value == 'horizontal' {
    position: relative; left: 50%;
    @include transform(translateX(-50%));
  }
}

@mixin BoxShadowHelper($level){
    @if $level == 1 {
        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    }
    @else if $level == 2 {
        box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
    }
    @else if $level == 3 {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    }
    @else if $level == 4 {
        box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
    }
    @else if $level == 5 {
        box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
    }
}

@mixin levitable($fromIndex, $toIndex) {
  @include BoxShadowHelper($fromIndex);
  @include transition(all 0.25s $ease-out-sine);
  &:hover {
    @include transform(translateY(-.2rem));
    @include BoxShadowHelper($toIndex);
    @include transition(all 0.4s $ease-out-sine);
  }
}

.pressable,
%pressable {
  &:active {
    @include transform(translateY(0));
    @include BoxShadowHelper(1);
  }
}